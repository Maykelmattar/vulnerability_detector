import sys, getopt
import os
import subprocess
from alive_progress import alive_bar
import time

def main(argv):
   print()
   print("********************************************************************************")
   print("**************************                            **************************")
   print("**************************   Representaion Importer   **************************")
   print("**************************                            **************************")
   print("********************************************************************************")
   print()
   filename = ''
   mode = 'all'
   verbose=0
   try:
      opts, args = getopt.getopt(argv,"hvf:m:",["file=","mode="])
   except getopt.GetoptError:
      printHelp()
      sys.exit(2)
   for opt, arg in opts:
      if opt == '-h':
         printHelp()
         sys.exit()
      elif opt == "-v":
         verbose = 1
      elif opt in ("-f", "--file"):
         filename = arg
      elif opt in ("-m", "--mode"):
         mode = arg
   if filename != "" :
      if os.path.isfile(filename):
         progressLength=1
         if mode in ['mixed','all']:
            progressLength=3
         with alive_bar(progressLength, theme='ascii',title="Extracting Representations") as bar:
            if mode.lower() in ['mixed', 'all','cfg']:
               ASTO = os.popen('java -jar progex.jar -cfg -lang java  -format json ./'+ filename).read()
               time.sleep(0.002)
               bar()
               if verbose == 1:
                  print(ASTO)
            if mode.lower() in ['mixed', 'all', 'ast']:
               CFGO = os.popen("java -jar progex.jar -ast -lang java  -format json ./"+ filename).read()
               time.sleep(0.002)
               bar()
               if verbose == 1:
                  print(CFGO)
            if mode.lower() in ['mixed', 'all', 'pdg']:
               PDGO = os.popen("java -jar progex.jar -pdg -lang java  -format json ./"+ filename).read()
               time.sleep(0.002)
               bar()
               if verbose == 1:
                  print(PDGO)
         filename = os.path.splitext(filename)[0]
         if mode.lower() in [ 'all', 'ast']:
            os.system("python AST_Import.py " + filename + "-AST.JSON")
         if mode.lower() in [ 'all', 'cfg']:
            os.system("python CFG_Import.py  " + filename + "-CFG.JSON")
         if mode.lower() in [ 'all', 'pdg']:
            os.system("python PDG_DATA_Import.py  " + filename + "-PDG-DATA.JSON")
         if mode.lower() in [ 'all', 'mixed']:
            os.system("python Mixed_Import.py " + filename + "-AST.JSON")
         if mode.lower() not in ['ast','cfg','all','pdg','mixed']:
            print("Mode Does Not Exist")
         if mode.lower() in ['mixed', 'all', 'ast']:
            os.popen("DEL " + filename + "-AST.JSON").read()
         if mode.lower() in ['mixed', 'all', 'cfg']:
            os.popen("DEL " + filename + "-CFG.JSON").read()
         if mode.lower() in ['mixed', 'all', 'pdg']:
            os.popen("DEL " + filename + "-PDG-DATA.JSON").read()
            os.popen("DEL " + filename + "-PDG-CTRL.JSON").read()

      else:
         print ("'" + filename + "' Not Found!")
   else:
        printHelp()

def printHelp():
    print("-h                                     Show help!", )
    print("-f --file <filename>                   Java file name", )
    print("-m --mode <mode>                       Mode: ALL( By default), AST, CFG, PDG, MIXED", )
    print("-v                                     Verbose to get more details in the output", )

if __name__ == "__main__":
   main(sys.argv[1:])