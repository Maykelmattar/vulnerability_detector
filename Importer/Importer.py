import sys, getopt
import os
import subprocess
from alive_progress import alive_bar
import time

def main(argv):
   print()
   print("********************************************************************************")
   print("**************************                            **************************")
   print("**************************   Representaion Importer   **************************")
   print("**************************                            **************************")
   print("********************************************************************************")
   print()
   filename = ''
   outputfile = ''
   verbose=0
   try:
      opts, args = getopt.getopt(argv,"hvf:m:",["file=","mode="])
   except getopt.GetoptError:
      printHelp()
      sys.exit(2)
   for opt, arg in opts:
      if opt == '-h':
         printHelp()
         sys.exit()
      elif opt == "-v":
         verbose = 1
      elif opt in ("-f", "--file"):
         filename = arg
      elif opt in ("-o", "--mode"):
         outputfile = arg
   if filename != "" :
      if os.path.isfile(filename):
         with alive_bar(3, theme='ascii',title="Extracting Representations") as bar: 
            ASTO = os.popen('java -jar progex.jar -cfg -lang java  -format json ./'+ filename).read()
            time.sleep(0.002)
            bar()
            if verbose == 1:
               print(ASTO)
            CFGO = os.popen("java -jar progex.jar -ast -lang java  -format json ./"+ filename).read()
            time.sleep(0.002)
            bar()
            if verbose == 1:
               print(CFGO)
            PDGO = os.popen("java -jar progex.jar -pdg -lang java  -format json ./"+ filename).read()
            time.sleep(0.002)
            bar()
            if verbose == 1:
               print(PDGO)
         filename = os.path.splitext(filename)[0]
         os.system("python AST_Import.py " + filename + "-AST.JSON")
         os.popen("DEL " + filename + "-AST.JSON").read()
         os.system("python CFG_Import.py  " + filename + "-CFG.JSON")
         os.popen("DEL " + filename + "-CFG.JSON").read()
         os.system("python PDG_DATA_Import.py  " + filename + "-PDG-DATA.JSON")
         os.popen("DEL " + filename + "-PDG-DATA.JSON").read()
         os.popen("DEL " + filename + "-PDG-CTRL.JSON").read()

      else:
         print ("'" + filename + "' Not Found!")
   else:
        printHelp()
   if outputfile != "":
        print ('Output file is "', outputfile)
def printHelp():
    print("-h                                     Show help!", )
    print("-f --file <filename>                   Java file name", )
    print("-m --mode <mode>                       Mode -n (default) for normal -m for mixed", )
    print("-v                                     Verbose to get more details in the output", )

if __name__ == "__main__":
   main(sys.argv[1:])